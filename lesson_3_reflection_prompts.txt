Q1. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

  For a better control code update in case local version be replaced by the remote repository.

Q2. Describe the differences between forks, clones, and branches. When would you use one instead of another?

  Forks -- create a repository clone on the GitHub server
  Clones -- create a copy of remote repository to local computer
  Branches -- Different versions of local repository

Q3. What is the benefit of having a copy of the last known state of the remote stored locally?

  Developers can continue work even offline, and without destruction to others.

Q4. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

  Distribute files to different developers and then assign different development tasks. It would be easy for each developer to manage their own work, but very hard to merge files and resolve the conflicts.

Q5. When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

  When I want to develop additional or different features based on the master, I will create branch so my new development will not affect other developers. For developing directly in the master, it's better fox minor bug fixing. 
